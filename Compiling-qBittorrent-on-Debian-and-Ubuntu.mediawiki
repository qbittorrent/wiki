Only follow this guide if you know what you are doing and this is what you really want.<br />
If you just want the latest version of qBittorrent, use our [https://launchpad.net/~qbittorrent-team/+archive/ubuntu/qbittorrent-stable stable] or [https://launchpad.net/~qbittorrent-team/+archive/ubuntu/qbittorrent-unstable unstable] PPAs.

This how-to will guide you though the compilation of qBittorrent and optionally its backend, <code>libtorrent-rasterbar</code> (referred to only as <code>libtorrent</code> for the rest of the document).<br />
This guide is written for Debian/Ubuntu, but the process should be similar for other Debian-derivatives distributions.

If you run into trouble or errors at any step, check the Troubleshooting section at the bottom of the page before posting an issue.

== General build dependencies ==

You need to install these packages in order to be able to compile qBittorrent from source.
 sudo apt-get install build-essential pkg-config automake libtool git zlib1g-dev libssl-dev libgeoip-dev
 sudo apt-get install libboost-dev libboost-system-dev libboost-chrono-dev libboost-random-dev

If you want, you can install the Boost libraries from source instead of installing them from the distro's repositories. This is quite easy to do, but generally does not make that much of a difference and is out of the scope of this guide.

== Runtime-only dependencies ==

qBittorrent has a runtime-only dependency on Python 3 for its search engine functionality.
 sudo apt-get install python3

== Qt libraries ==

qBittorrent uses the Qt framework as the basis for its GUI.<br />
qBittorrent 4.0 - 4.1.x requires at least Qt 5.5.1, and qBittorrent 4.2 and later requires at least Qt 5.9.<br />

Note that Qt libraries in Debian 8/9 repository is too old for compiling newer qBittorrent, you need to upgrade your system to Debian 10, or install newer Qt libraries by the other way.<br />

If you were using Ubuntu 16.04 LTS, you could add this PPA:
 sudo add-apt-repository ppa:beineri/opt-qt597-xenial
 sudo apt-get update
 sudo apt-get install qt59base qt59svg qt59tools
 export PATH=/opt/qt59/bin:$PATH
 export PKG_CONFIG_PATH=/opt/qt59/lib/pkgconfig:$PKG_CONFIG_PATH

For Debian 10, Ubuntu 18.04 LTS or later, just install Qt from repository
 sudo apt-get install qtbase5-dev qttools5-dev-tools libqt5svg5-dev

Alternatively, you could of course compile Qt version of your choosing from source. However, only do this if you have a _very_ good reason to do so.

== libtorrent ==
qBittorrent uses the [https://libtorrent.org/ libtorrent] library by Arvid Norberg as the backend. <br />
It is necessary to compile and install <code>libtorrent</code> before compiling qBittorrent.

It is possible to install the <code>libtorrent</code> development package directly from the distro's repositories:
 sudo apt-get install libtorrent-rasterbar-dev

but the version may not be the most recent or exactly the one you want.

Alternatively, you can compile it yourself.<br />First, clone the <code>libtorrent</code> repository:
 git clone https://github.com/arvidn/libtorrent.git
 cd libtorrent

To compile, first choose the appropriate <code>git</code> and compile commands in the table below, according to the version of <code>libtorrent</code> you need:

{| class="wikitable"
! style="text-align: center;" | libtorrent version series
! style="text-align: center;" | qBittorrent version support
! style="text-align: center;" | git command (example with most recent tag in series at the time of writing)
! colspan="2" style="text-align: center;" | Compile commands (after running the git command, choose between using autotools <em>or</em> CMake)
|-
| colspan="3" style="text-align: center;" | ----
| style="text-align: center;" | autotools
| style="text-align: center;" | CMake
|-
| 1.2.x
| >= 4.2.0
| <source>git checkout libtorrent-1_2_5</source>
| <source>./autotool.sh
./configure --disable-debug --enable-encryption CXXFLAGS="-std=c++14"</source>
| <source>mkdir -p cmake-build-dir/release && cd cmake-build-dir/release
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=14 -G "Unix Makefiles" ../..</source>
|-
| 1.1.x
| >= 3.3.8
| <source>git checkout libtorrent-1_1_14</source>
| <source>./autotool.sh
./configure --disable-debug --enable-encryption</source>
| <source>mkdir -p cmake-build-dir/release && cd cmake-build-dir/release
cmake -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../..</source>
|-
| 1.0.x
| <= 4.1.5
| <source>git checkout libtorrent-1_0_11</source>
| <source>./autotool.sh
./configure --disable-debug --enable-encryption</source>
| <source>mkdir -p cmake-build-dir/release && cd cmake-build-dir/release
cmake -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../..</source>
|}

Now you're ready to compile:
 make clean && make -j$(nproc)

Finally, you can install libtorrent.

If you have <code>checkinstall</code>, the following command will generate and install a <code>.deb</code> package that can be tracked and managed by your package manager:

 sudo checkinstall --nodoc --backup=no --deldesc --pkgname libtorrent-rasterbar --pkgversion 1.x.x-source-compile # change the version to your liking

Alternatively, the traditional way will do just fine:

 sudo make install

For more information on building libtorrent, see [https://www.libtorrent.org/building.html libtorrent downloading and building].

== Compiling qBittorrent (with the GUI) ==

First, obtain the qBittorrent source code.<br />
Either download and extract a .tar archive from [https://sourceforge.net/projects/qbittorrent/files/qbittorrent/ Sourceforge] or clone the git repository:
  git clone https://github.com/qbittorrent/qBittorrent

If you clone the git repository and want to use the stable current version (rather than the development version int the <code>master</code> branch which may not work), you need to checkout the stable branch. You can do this in two ways:

By checking out the stable branch (4.2.x at the time of writing):

  cd qBittorrent
  git checkout v4_2_x

Or by checking out the latest tagged stable release (4.2.2 at the time of writing):

  cd qBittorrent
  git checkout release-4.2.2

Open the folder in a terminal window and run this to configure the build:
 ./configure CXXFLAGS="-std=c++14"

Once that finishes successfully, run:
 make -j$(nproc)

Finally, you can install qBittorrent:

If you have <code>checkinstall</code>, the following command will generate and install a <code>.deb</code> package that can be tracked and managed by your package manager:

 sudo checkinstall --nodoc --backup=no --deldesc --pkgname qbittorrent --pkgversion 4.x.x-source-compile # change the version to your liking

Alternatively, the traditional way will do just fine:

 sudo make install

That's it! qBittorrent should now be installed. You can now run qBittorrent using the following command:
 qbittorrent

== Compiling qBittorrent (without the GUI; aka qBittorrent-nox aka headless) ==

The steps are almost all the same as the GUI version except for the configure step, where you should add the <code>--disable-gui</code> flag to it, like so:
 ./configure CXXFLAGS="-std=c++14" --disable-gui

It is also recommended that you name the package <code>qbittorrent-nox</code> instead of <code>qbittorrent</code> if you use the <code>checkinstall</code> method for installing.

That's it! qBittorrent-nox should now be installed. You can now run qBittorrent-nox using the following command:
 qbittorrent-nox

Since you disabled the graphical user interface, qBittorrent can only be controlled via its WebUI. If you haven't disabled authentication, (which is the default behavior), you can access it at:
 http://localhost:8080
 Username: admin
 Password: adminadmin

Documentation about running qBittorrent without GUI is available [[Running-qBittorrent-without-X-server|here]].

== Troubleshooting ==

=== Compiling (generic) ===

* In the <code>make</code> command, the <code>-j$(nproc)</code> flag makes the number of build jobs equal to the number of threads available; increasing it may make the build faster, but an eye must be kept on the memory usage.

=== Compiling libtorrent ===

*  If you get a <code>configure: error: Boost.System library not found</code>, check if you installed all the above dependencies.<br/>If yes, add <code>--with-boost-libdir=/usr/lib/i386-linux-gnu</code>

=== Compiling qBittorrent ===

*  If you're using <code>libtorrent-rasterbar</code> from the 0.16.x series, you also need to pass the <code>--with-libtorrent-rasterbar0.16</code> option to configure. qBittorrent v3.3.x has dropped the support of libtorrent 0.16.x.
*  If you want to compile with qt4 instead of qt5, you also need to pass the <code>--with-qt4</code> option to configure. qBittorrent v4.0.x has dropped the support of qt4

=== Running qBittorrent ===

If you get an error similar to <code>qbittorrent: symbol lookup error: qbittorrent: undefined symbol:</code>
Simply run:
 ldconfig
The following method is too complex, but if you want to know what's going on, then you can read the following method (see https://github.com/qbittorrent/qBittorrent/issues/8047):

Check if your <code>LD_LIBRARY_PATH</code> environment variable is set and the path <code>/usr/local/lib</code> is included.

Simply run <code>env</code> in your terminal and look for <code>LD_LIBRARY_PATH</code>.
If so, you are good to go. If not, add the path to the variable:
  export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}


== Notes ==
* If you experience any problem with this how to, do not hesitate to contact sledgehammer999(at)qbittorrent(dot)org.
